[package]
name = "myos"
version = "0.1.0"
authors = ["hwuhsi <juny24602@gmail.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[dependencies]
bootloader = { version = "0.10.2", features = ["map_physical_memory"]}
volatile = "0.4.4"
spin = "0.9.0"
raw-cpuid = "9.0.0"
x86_64 = "0.14.0"
x86 = "0.39.0"
pic8259_simple = "0.2.0"
pc-keyboard = "0.5.0"
linked_list_allocator = "0.8.11"
apic = { git = "https://github.com/rcore-os/apic-rs" }

isomorphic_drivers = { git = "https://github.com/rcore-os/isomorphic_drivers" }

bitflags = "1.2"
bit_field = "0.10.1"
bitvec = { version = "0.22.3", default-features = false}



lazy_static = { version = "1.4", features = ["spin_no_std"]}


[package.metadata.bootimage]
run-args = ["-m", "512", "-drive", "id=disk,file=testfs/myimage.img,format=raw,if=none", "-device", "ahci,id=ahci", "-device", "ide-hd,drive=disk,bus=ahci.0"]
test-args = ["-device", "isa-debug-exit,iobase=0xf4,iosize=0x04"]
test-success-exit-code = 33         # (0x10 << 1) | 1

[package.metadata.bootloader]
# The address at which the kernel stack is placed. If not provided, the bootloader
# dynamically searches for a location.
kernel-stack-address = "0xFFFFFF8000000000"

# The size of the kernel stack, given in number of 4KiB pages. Defaults to 512.
kernel-stack-size = 512

# The virtual address offset from which physical memory is mapped, as described in
# https://os.phil-opp.com/paging-implementation/#map-the-complete-physical-memory
# Only applies if the `map_physical_memory` feature of the crate is enabled.
# If not provided, the bootloader dynamically searches for a location.
physical-memory-offset = "0xFFFF800000000000"